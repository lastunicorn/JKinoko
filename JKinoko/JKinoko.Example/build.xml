<?xml version="1.0" encoding="UTF-8"?>
<project name="JKinoko.Examples" default="distZipClean">
	
	<!-- Project directories -->
	<property name="jkinoko.dir" location="../JKinoko" />
	<property name="src.dir" location="src" />
	<property name="scripts.dir" location="scripts" />
	
	<!-- Dist directories -->
	<property name="build.dir" location="build" />
	<property name="dist.dir" location="dist" />
	<property name="subdist.dir" location="${dist.dir}/JKinoko.Example" />
	<property name="dist.lib.dir" location="${subdist.dir}/lib" />
	<property name="dist.jar.name" value="jkinoko.example.jar" />
	<property name="dist.version.num" value="1.0.0" />
	
	<property name="manifest.file" value="manifest" />
	
	<tstamp>
		<format property="build.time" pattern="dd-MM-yyyy HH:mm:ss.SSS" />
    </tstamp>
	<tstamp>
        <format property="zip.time" pattern="yyyy MM dd HHmm" />
    </tstamp>
    <property name="zip.file.name" value="JKinokoExample - ${zip.time} - ${dist.version.num}.zip"/>

	<!--
	================================================================================ 
    target: distZipClean
    Builds the project's zip distribution.
    ================================================================================
    -->
	<target name="distZipClean" depends="distNoZip, zipAndDelete">
	</target>

	<!--
	================================================================================ 
    target: distAndZip
    Builds the project's zip distribution. But leaves behind the unzipped files.
    ================================================================================
    -->
	<target name="distAndZip" depends="distNoZip, zip">
	</target>

	<!--
	================================================================================ 
    target: distNoZip
    Builds the project's distribution without zipping it.
    ================================================================================
    -->
	<target name="distNoZip" depends="jar, copyAdditionalFiles">
	</target>

    <!--
    - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
    target: jar
    - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
    -->
	<target name="jar" depends="compile">
		<echo level="info">Building jar</echo>
		<manifest file="${manifest.file}">
			<attribute name="Built-By" value="${user.name}" />
			<attribute name="Implementation-Version" value="${dist.version.num} - ${build.time}" />
			<attribute name="Sealed" value="true" />
		</manifest>
		<mkdir dir="${dist.lib.dir}"/>
		<jar destfile="${dist.lib.dir}/${dist.jar.name}" manifest="${manifest.file}" level="9">
			<fileset dir="${build.dir}" >
				<include name="**/*"/>
			</fileset>
		</jar>
		<delete file="${manifest.file}" />
	</target>

    <!--
    - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
    target: copyFiles
    - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
    -->
    <target name="copyAdditionalFiles" depends="jar">
    	
    	<!-- copy jkinoko.jar -->
        <copy file="${jkinoko.dir}/dist/JKinoko/lib/jkinoko.jar" todir="${dist.lib.dir}"/>

    	<!-- copy license -->
        <copy file="${jkinoko.dir}/dist/JKinoko/license.txt" todir="${subdist.dir}"/>
    	
    	<!-- copy changelog -->
        <copy file="${jkinoko.dir}/dist/JKinoko/changelog.txt" todir="${subdist.dir}"/>
    	
    	<!-- copy readme -->
        <copy file="${jkinoko.dir}/dist/JKinoko/readme.txt" todir="${subdist.dir}"/>
    	
    	<!-- copy cmd file -->
        <copy file="${scripts.dir}/JKinoko.Example.cmd" todir="${subdist.dir}"/>
    	
    </target>

    <!--
    - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
    target: zip
    - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
    -->
    <target name="zip">
        <zip destfile="${dist.dir}/${zip.file.name}" basedir="${dist.dir}" excludes="${zip.file.name}" />
    </target>

    <!--
    - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
    target: zipAndDelete
    - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
    -->
    <target name="zipAndDelete" depends="zip">
        <delete includeemptydirs="true">
            <fileset dir="${dist.dir}">
                <include name="**/*" />
                <exclude name="${zip.file.name}" />
            </fileset>
        </delete>
    </target>

    <!--
    - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
    target: compile
    - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
    -->
	<target name="compile" depends="init">
		<echo level="info">Compiling JKinoko project</echo>
		<ant antfile="../JKinoko/build.xml" target="distAndZip" inheritAll="false"/>
		<echo level="info">Compiling source files</echo>
		<javac srcdir="${src.dir}" destdir="${build.dir}" classpath="${jkinoko.dir}/dist/JKinoko/lib/jkinoko.jar" />
	</target>

    <!--
    - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
    target: init
    - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
    -->
    <target name="init">
        <echo level="info">Initializing build folders</echo>
        <delete dir="${build.dir}" />
        <delete dir="${dist.dir}" />
        <mkdir dir="${build.dir}" />
        <mkdir dir="${dist.dir}" />
    </target>
	
</project>
